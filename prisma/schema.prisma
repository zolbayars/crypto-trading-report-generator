generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
}

model merged_trade {
  id            Int                    @id @default(autoincrement())
  entry_date     DateTime               @db.Timestamp(0) @map("entry_date")
  exit_date      DateTime               @db.Timestamp(0)
  symbol        String                 @db.VarChar(255)
  direction     merged_trade_direction
  entry_price    Float
  exit_price     Float
  size          Float
  pnl           Float
  pnl_percentage Float
  fee           Float
  fee_asset      String                 @db.VarChar(255)
  entry_reason   String?                @db.VarChar(255)
  exit_reason    String?                @db.VarChar(255)
  mistake       String?                @db.VarChar(255)
  comment       String?                @db.VarChar(255)
  trades        trade[]
  created_at     DateTime               @default(now()) @db.Timestamp(6)
  updated_at     DateTime               @default(now()) @db.Timestamp(6)

  @@unique([symbol, entry_date, exit_date])
  @@index([entry_date])
}

model trade {
  id                Int              @id @default(autoincrement())
  exchange_trade_id   String
  exchange_order_id   String
  symbol            String           @db.VarChar(255)
  side              String           @db.VarChar(255)
  price             Float
  qty               Float
  quote_qty          Float
  realized_pnl       Float
  margin_asset       String           @db.VarChar(255)
  commission        Float
  commission_asset   String           @db.VarChar(255)
  exchange_created_at DateTime         @db.Timestamp(0)
  position_side      String           @db.VarChar(255)
  is_buyer           Int              @db.SmallInt
  is_maker           Int              @db.SmallInt
  is_entry_trade      Int?             @db.SmallInt
  market_type        trade_marketType
  exchange          trade_exchange
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @db.Timestamp(6)
  parent_trade       merged_trade?    @relation(fields: [parent_trade_id], references: [id])
  parent_trade_id     Int?

  @@unique([exchange, exchange_trade_id])
  @@index([parent_trade_id])
  @@index([exchange_trade_id])
}

model user {
  id       Int    @id @default(autoincrement())
  email    String @unique()
  password String
}

enum merged_trade_direction {
  long
  short
}

enum trade_marketType {
  futures
  spot
}

enum trade_exchange {
  binance
}
